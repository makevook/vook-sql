BEGIN;

# demo_term
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (1, 'SDK', '특정 플랫폼이나 운영체재를 위한 앱을 만드는데 필요한 도구와 코드 모음 SDK는 앱 개발을 쉽고 빠르게 만드는 도구로 개발자가 처음부터 모든 것을 스스로 구축할 필요가 없어 시간과 노력을 절약할 수 있습니다. 예) 개발자가 지도를 앱에 추가하고 싶다면 구글 지도 SDK를 사용할 수 있습니다. 이 SDK에는 지도 표시, 사용자 위치 추적, 경로 검색 등의 기능을 위한 코드와 도구가 포함되어 있습니다.', '2024-07-23 03:34:50.014403', '2024-07-23 03:34:50.014403');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (2, 'API', '프로그램이 서로 통신하고 협력할 수 있는 필수적인 연결 도구 API는 크게 데이터 공유, 기능 활용, 시스템 통합의 역할을 수행합니다. 데이터 공유 : 다른 프로그램의 데이터를 제공합니다. 가령, 날씨 앱은 API로 기상청의 날씨 데이터를 가져올 수 있습니다. 기능 활용 : 다른 프로그램의 기능을 활용할 수 있도록 합니다. 가령, 음악 앱은 API로 스포티파이 등의 음악 스트리밍 서비스의 음악을 재생할 수 있습니다. 시스템 통합 : 서로 다른 시스템을 연결해 함께 작동하도록 합니다. 가령, 온라인 쇼핑몰은 API로 주문 처리, 결제 처리 및 배송 추적을 위한 다른 시스템과 통합할 수 있습니다.', '2024-07-23 03:34:50.043091', '2024-07-23 03:34:50.043091');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (3, 'IDE', '통합 개발 환경의 약자로 개발자가 소프트웨어를 빠르고 쉽게 개발하도록 돕는 도구 IDE는 코딩, 컴파일, 디버깅 및 테스트 등 소프트웨어 개발 프로세스의 모든 단계를 위한 다양한 기능을 제공합니다.', '2024-07-23 03:34:50.046937', '2024-07-23 03:34:50.046937');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (4, 'In-app browser', '모바일 앱 혹은 데스크톱 앱 내 내장된 웹 브라우저 별도의 웹 브라우저 앱을 실행하지 않아도 앱에서 웹페이지를 볼 수 있도록 합니다.', '2024-07-23 03:34:50.052336', '2024-07-23 03:34:50.052336');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (5, 'External browser', '익스터널 브라우저는 별도의 앱으로 설치되는 웹 브라우저입니다. 대표적으로 크롬, 사파리, 파이어폭스, 엣지 등이 있습니다.', '2024-07-23 03:34:50.054672', '2024-07-23 03:34:50.054672');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (6, 'CDC', '데이터베이스에 변경된 데이터를 실시간으로 추적하고 캡처하는 기술 데이터베이스에 삽입, 수정, 삭제 등의 변경 작업이 발생할 때마다 해당 변경사항을 기록하고 다른 시스템이나 프로세스에 알려줍니다. CDC는 데이터베이스의 로그 파일을 모니터링하거나 트리거를 사용해 데이터 변경사항을 감지합니다. 변경사항이 감지되면 CDC는 해당 변경 사항을 메시지 형식으로 포장하고 이를 큐에 저장합니다.', '2024-07-23 03:34:50.056449', '2024-07-23 03:34:50.056449');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (7, 'Streaming', '미디어 파일을 인터넷을 통해 실시간으로 전송하고 재생하는 기술 이전에는 음악이나 영상을 다운로드한 후에 재생할 수 있었다면 스트리밍 기술로 파일을 다운로드하지 않고도 바로 듣거나 재생할 수 있게 되었습니다. 스트리밍에는 라이브 스트리밍과 온디맨드 스트리밍으로 나눌 수 있습니다. 라이브 스트리밍은 실시간으로 방송하고 시청하는 방식이며, 온디맨드 스트리밍은 이미 녹화된 음악, 동영상, 게임 등을 선택해 시청하는 방식입니다.', '2024-07-23 03:34:50.058227', '2024-07-23 03:34:50.058227');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (8, '컴파일러', '개발자가 작성한 소스 코드를 컴퓨터가 이해하고 실행할 수 있는 기계어로 변환하는 소프트웨어 도구 컴파일러는 대표적으로 개발자의 소스 코드를 읽고 분석하며 소스 코드의 문법적 오류를 확인하고 오류 메시지를 출력합니다. 또한 생성된 기계어를 실행 가능한 파일 형식으로 저장합니다.', '2024-07-23 03:34:50.059812', '2024-07-23 03:34:50.059812');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (9, '클라이언트', '클라이언트는 사용자 컴퓨터에 설치된 소프트웨어로 서버에 요청을 보내고 서버로부터 응답을 받습니다. 웹 브라우저, 이메일 클라이언트, 파일 공유 프로그램 등이 클라이언트에 속합니다.', '2024-07-23 03:34:50.061679', '2024-07-23 03:34:50.061679');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (10, '서버', '서버는 네트워크에 연결된 컴퓨터로 클라이언트의 요청을 받아 처리하고 결과를 응답으로 보냅니다. 웹 서버, 데이터 베이스 서버, 메일 서버 등이 서버에 속합니다.', '2024-07-23 03:34:50.063343', '2024-07-23 03:34:50.063343');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (11, '프론트엔드', '사용자가 직접 보고 상호 작용하는 웹페이지의 눈에 보이는 부분을 담당합니다. 웹 브라우저에서 보이는 모든 요소 (텍스트, 이미지, 영상, 버튼 등)와 사용자의 상호 작용(클릭, 스크롤, 입력)이 프론트엔드에 속합니다.', '2024-07-23 03:34:50.064969', '2024-07-23 03:34:50.064969');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (12, '백엔드', '사용자가 직접 볼 수 없는 웹페이지의 서버를 담당합니다. 데이터베이스 관리, 서버 로직 처리, 사용자 인증, 보안 등 웹페이지의 핵심 기능을 구현합니다.', '2024-07-23 03:34:50.066760', '2024-07-23 03:34:50.066760');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (13, '디버그', '프로그램에서 발생하는 오류나 문제를 찾아 해결하는 과정 디버깅은 프로그램의 품질을 높이고 사용자에게 안정적인 경험을 제공합니다. 디버깅 과정에서 발생하는 오류를 정확히 재현해보고 코드를 분석해 원인을 파악합니다. 오류의 원인을 파악한 후 코드를 수정하여 오류를 해결하고 테스트를 통해 오류가 해결되었는지 확인합니다. 해결 후에는 디버깅 과정에서 발생한 오류, 오류 원인, 해결 방법 등을 문서화합니다.', '2024-07-23 03:34:50.068539', '2024-07-23 03:34:50.068539');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (14, '빌드', '소스 코드를 실행 가능한 파일로 변환하는 과정 먼저 컴파일러로 소스 코드를 기계어로 변환합니다. 컴파일된 객체 파일을 연결하고 의존하는 라이브러리를 추가해 실행 가능한 파일을 만듭니다. 실행 가능한 파일과 기타 필요한 파일을 하나의 패키지로 묶습니다. 컴파일은 소스 코드를 기계어로 변환하는 과정이며 빌드 과정의 한 단계인 반면, 빌드는 소스 코드를 실행 가능한 파일로 변환하는 전체적인 과정을 의미합니다.', '2024-07-23 03:34:50.070014', '2024-07-23 03:34:50.070014');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (15, '배포', '완성된 코드를 실제 사용 환경에 설치하고 실행 가능한 형태로 만드는 과정 배포 방법에는 수동 배포, 자동 배포, 컨테이너 배포 등이 있습니다. 수동 배포는 개발자가 직접 서버에 연결해 배포 작업을 수행하는 방식입니다. 자동 배포는 CI/CD 도구를 사용해 배포 과정을 자동화 하는 방식입니다. 컨테이너 배포는 Docker와 같은 컨테이너 기술을 사용해 배포하는 방식입니다.', '2024-07-23 03:34:50.071634', '2024-07-23 03:34:50.071634');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (16, '반응형 웹', '웹사이트가 다양한 기기의 화면 크기와 해상도에 맞게 자동으로 디자인 및 레이아웃을 조정하도록 돕는 웹 디자인 접근 방식입니다.', '2024-07-23 03:34:50.073529', '2024-07-23 03:34:50.073529');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (17, 'SSO', '사용자가 여러 시스템이나 애플리케이션에 한 번의 로그인 만으로 액세스할 수 있도록 하는 인증 방식 사용자는 시스템마다 별도 계정을 만들고 로그인 할 필요 없이 하나의 아이디와 비밀번호만 사용해 여러 시스템에 로그인할 수 있습니다. SSO는 다음과 같은 단계를 거쳐 작동합니다. 1. 사용자는 하나의 시스템에 로그인합니다. 2. 사용자 인증 정보는 중앙 인증 서버에 전송됩니다. 3. 중앙 인증 서버는 사용자 인증 정보를 검사하고 유효하면 인증 토큰을 생성합니다. 4. 인증 토큰은 사용자의 브라우저에 저장됩니다. 5. 사용자가 다른 시스템에 액세스하려고 할 때 브라우저는 저장된 인증 토큰을 자동으로 전송합니다. 6. 중앙 인증 서버는 인증 토큰을 검사하고 유효하면 사용자를 자동으로 로그인시킵니다.', '2024-07-23 03:34:50.076358', '2024-07-23 03:34:50.076358');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (18, 'SaaS', '소프트웨어를 서비스로 제공하는 모델 SaaS 서비스 제공업체는 웹 브라우저를 통해 사용자가 액세스 할 수 있는 소프트웨어 애플리케이션을 개발, 운영 및 유지 관리합니다. 사용자는 별도의 소프트웨어를 설치하거나 하드웨어를 구매할 필요 없이 인터넷 연결만 있으면 서비스를 이용할 수 있습니다.', '2024-07-23 03:34:50.078531', '2024-07-23 03:34:50.078531');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (19, 'PasS', '소프트웨어 개발 및 배포를 위한 플랫폼을 서비스로 제공하는 모델 PaaS 플랫폼은 개발자들이 웹 애플리케이션을 구축, 테스트, 배포 및 관리하는 데 필요한 모든 기능과 도구를 제공합니다. 개발자는 PaaS 플랫폼을 사용하여 핵심적인 개발 작업에 집중할 수 있으며, 서버 관리, 운영 체제 관리, 네트워킹 등의 인프라 관리 작업은 PaaS 플랫폼 제공업체가 담당합니다.', '2024-07-23 03:34:50.081078', '2024-07-23 03:34:50.081078');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (20, 'IaaS', '컴퓨팅, 스토리지, 네트워킹과 같은 기반 IT 인프라를 서비스로 제공하는 모델 IaaS 서비스 제공업체는 사용자에게 가상 머신, 서버, 스토리지, 네트워킹 장비 등을 제공하며, 사용자는 이러한 자원을 자유롭게 사용하여 원하는 시스템 및 애플리케이션을 구축할 수 있습니다.', '2024-07-23 03:34:50.083301', '2024-07-23 03:34:50.083301');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (21, 'SOAP API', '웹 서비스를 위한 표준 프로토콜 XML 기반 메시지 형식을 사용하여 네트워크를 통해 분산된 응용 프로그램 간 통신을 지원합니다. SOAP API는 표준화된 웹 서비스 프로토콜이지만, 복잡하고 느리고 비효율적인 단점이 있습니다. 이러한 단점을 해결하기 위해 REST API, JSON API와 같은 다른 웹 서비스 프로토콜들이 등장했습니다.', '2024-07-23 03:34:50.085007', '2024-07-23 03:34:50.085007');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (22, 'RPC', '네트워크를 통해 원격 시스템에 있는 함수를 마치 로컬 시스템에 있는 함수처럼 호출하는 기술 개발자는 호출되는 함수가 다른 시스템에 있는지 여부를 확인하지 않고 함수를 호출할 수 있습니다. RPC는 분산 시스템에서 서로 다른 시스템 간 통신과 자원 공유를 용이하게 만들며, 클라이언트 - 서버 애플리케이션 개발에 많이 사용됩니다.', '2024-07-23 03:34:50.088031', '2024-07-23 03:34:50.088031');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (23, '웹소캣', '웹 클라이언트와 웹 서버 간에 지속적인 양방향 실시간 통신을 가능하게 하는 API 기존의 HTTP 기반 웹 요청과 달리 WebSocket은 한 번의 TCP 연결을 통해 클라이언트와 서버 간에 지속적으로 데이터를 주고받을 수 있으므로, 채팅, 게임, 실시간 데이터 갱신 등 실시간으로 데이터 송수신이 필요한 애플리케이션에 적합합니다.', '2024-07-23 03:34:50.089817', '2024-07-23 03:34:50.089817');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (24, 'REST API', 'REST 아키텍처 스타일의 디자인 원칙을 준수하는 API REST API를 RESTful API라고 불리기도 합니다. REST API는 일관되고 이해하기 쉬운 인터페이스를 제공하며, 다양한 플랫폼과 프로그래밍 언어에서 쉽게 사용할 수 있는 장점이 있습니다. REST API는 HTTP method를 사용하여 자원에 대한 작업을 수행합니다. 일반적으로 사용되는 HTTP method는 다음과 같습니다.  GET: 자원을 조회합니다. POST: 자원을 생성합니다. PUT: 자원을 업데이트합니다. DELETE: 자원을 삭제합니다.', '2024-07-23 03:34:50.091152', '2024-07-23 03:34:50.091152');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (25, 'HTTP', '웹 브라우저와 웹 서버 간의 통신을 위한 기본 프로토콜 웹사이트 방문 시 사용자가 입력한 URL을 요청하고, 웹 서버는 요청에 맞는 웹 페이지나 다른 데이터를 응답으로 전송하는 데 사용됩니다. HTTP는 기본적으로 데이터를 평문으로 전송하기 때문에 도청이나 위변조 위험이 있어 최근에는 HTTPS를 사용합니다.', '2024-07-23 03:34:50.092769', '2024-07-23 03:34:50.092769');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (26, 'HTTPS', 'HTTP에 SSL/TLS 프로토콜을 추가하여 안전하게 데이터를 전송하도록 보안 강화한 프로토콜입니다. HTTPS는 웹 브라우저와 웹 서버 간 모든 통신을 암호화해 도청이나 위변조를 방지합니다. 웹 서버의 신원을 인증해 위조 사이트로부터 사용자를 보호하며, 데이터 전송 과정에서 데이터가 변경되지 않았는지 확인합니다.', '2024-07-23 03:34:50.095446', '2024-07-23 03:34:50.095446');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (27, 'SSL', '웹 브라우저와 웹 서버 간의 통신을 암호화하여 보안하는 프로토콜 SSL은 현재 TLS(Transport Layer Security)로 이름이 변경되었지만, 여전히 SSL이라는 용어가 널리 사용되고 있습니다.', '2024-07-23 03:34:50.096970', '2024-07-23 03:34:50.096970');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (28, 'TLS', '인터넷 상의 두 시스템 간의 통신을 보호하는 보안 프로토콜 데이터 암호화, 신원 인증, 데이터 무결성 보장 기능을 제공하여 사용자의 개인정보, 로그인 정보, 금융 정보 등을 안전하게 보호합니다. 이전에 사용되었던 SSL(Secure Sockets Layer) 프로토콜의 후속 버전입니다.', '2024-07-23 03:34:50.099252', '2024-07-23 03:34:50.099252');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (29, '프레임워크', '소프트웨어 개발 과정을 돕는 도구와 라이브러리의 집합 프레임워크는 개발자가 애플리케이션의 기본 구조 및 핵심 기능을 빠르고 쉽게 구축할 수 있도록 기본적인 뼈대를 제공합니다. 대표적으로 웹에선 Django, Ruby on Rails 등이 있으며, 모바일에선 React Native, Flutter 등이 있습니다.', '2024-07-23 03:34:50.101295', '2024-07-23 03:34:50.101295');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (30, '라이브러리', '라이브러리는 개발자가 특정 기능이나 작업을 수행할 수 있도록 재사용 가능한 코드 모듈을 제공합니다. 가령 NumPy, Pandas 등 데이터 처리 관련 라이브러리는 복잡한 데이터 분석 및 처리 작업을 수행하는 데 도움을 줍니다.', '2024-07-23 03:34:50.102692', '2024-07-23 03:34:50.102692');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (31, '플러그인', '기존 소프트웨어에 새로운 기능을 추가하거나 기존 기능을 확장하는 소프트웨어 구성 요소 일반적으로 독립적인 프로그램으로 작동하며, 호환되는 호스트 프로그램에 설치해야 합니다. 플러그인은 다양한 분야에서 사용되며, 웹 브라우저, 그래픽 편집 프로그램, 비디오 편집 프로그램, 게임 엔진 등에서 흔히 볼 수 있습니다.', '2024-07-23 03:34:50.104105', '2024-07-23 03:34:50.104105');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (32, '파라미터', '함수는 특정 작업을 수행하도록 설계된 코드 블록입니다. 함수를 호출할 때 원하는 결과를 얻도록 함수에 데이터를 전달해야 합니다. 이 데이터를 파라미터라고 부릅니다.', '2024-07-23 03:34:50.105626', '2024-07-23 03:34:50.105626');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (33, 'Argument', '인자값은 함수 호출 시 실제 값을 의미하며, 파라미터에 전달됩니다. 인자값은 다양한 형태의 데이터, 숫자, 문자열, 리스트, 객체 등을 포함할 수 있습니다. 함수는 전달된 인자값을 사용하여 계산을 수행하거나 작업을 처리합니다.', '2024-07-23 03:34:50.107855', '2024-07-23 03:34:50.107855');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (34, 'AJAX', '비동기 JavaScript 및 XML의 약자로, 웹 페이지를 부분적으로 다시 로드하지 않고도 서버와 데이터를 주고받을 수 있는 웹 개발 기술 AJAX를 사용하면 사용자가 웹 페이지를 새로고침하지 않고도 데이터를 업데이트하고 새로운 콘텐츠를 로드할 수 있어 웹사이트의 사용자 경험을 크게 향상시킬 수 있습니다. 대표적으로 검색창에 입력하는 단어에 대한 자동 완성 기능, 무한 스크롤, 실시간 데이터 업데이트 등에 활용됩니다.', '2024-07-23 03:34:50.109280', '2024-07-23 03:34:50.109280');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (35, '멀티스레드', '하나의 프로그램에서 동시에 여러 개의 작업을 수행하는 프로그래밍 방식입니다. 멀티스레드를 사용하면 컴퓨터의 여러 개의 CPU 코어를 효율적으로 활용하여 프로그램 성능을 향상시킬 수 있습니다.', '2024-07-23 03:34:50.112771', '2024-07-23 03:34:50.112771');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (36, '렌더링', '렌더링은 2D 또는 3D 모델을 기반으로 이미지 또는 영상 컴퓨터 그래픽스, 영화 제작, 비디오 게임, 건축 시각화 등 다양한 분야에서 활용됩니다. 렌더링 과정은 모델 정보를 시각적 표현으로 변환하는 복잡한 계산 과정을 포함하며, 빛, 색상, 질감, 그림자 등 다양한 요소를 고려하여 현실감 넘치는 이미지 또는 영상을 생성합니다.', '2024-07-23 03:34:50.113810', '2024-07-23 03:34:50.113810');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (37, '샌드박스', '실제 환경에 영향을 미치지 않고 새로운 소프트웨어나 기능을 테스트할 수 있는 가상의 공간입니다. 샌드박스는 개발자가 버그를 찾고 코드를 개선할 수 있는 안전한 환경을 제공합니다.', '2024-07-23 03:34:50.115011', '2024-07-23 03:34:50.115011');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (38, '데이터 레이크', '구조화된 또는 반구조화된, 혹은 구조화되지 않은 방대한 양의 데이터를 저장하는 저장소 데이터 레이크는 기존의 데이터 웨어하우스와는 다릅니다. 데이터 웨어하우스는 일반적으로 미리 정의된 스키마를 사용하여 구조화된 데이터를 저장하는 반면, 데이터 레이크는 스키마 없이 데이터를 저장할 수 있습니다. 즉, 데이터 레이크에는 모든 유형의 데이터를 저장할 수 있으며, 데이터가 저장된 후에도 데이터 스키마를 변경할 수 있습니다.', '2024-07-23 03:34:50.116679', '2024-07-23 03:34:50.116679');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (39, '데브옵스', '데브옵스(DevOps)는 소프트웨어 개발(Development)과 운영(Operations)을 하나의 통합된 프로세스로 연결하여 소프트웨어를 빠르게, 안정적으로, 그리고 효율적으로 제공하는 문화와 관행들의 집합 데브옵스는 개발팀과 운영팀 간의 협업을 강조하며, 자동화, 지속적인 통합 및 배포, 모니터링 등을 통해 소프트웨어 개발 및 제공 프로세스를 개선하는 데 중점을 둡니다.', '2024-07-23 03:34:50.117978', '2024-07-23 03:34:50.117978');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (40, 'CI/CD', '소프트웨어 개발 프로세스를 자동화하여 소프트웨어를 빠르고 안정적으로 제공하는 방법 CI/CD는 다음 두 단계로 구성됩니다. - 지속적인 통합(Continuous Integration, CI): 개발자가 코드를 변경할 때마다 코드를 자동으로 통합하고 테스트하는 프로세스입니다. CI는 개발 중에 발생하는 버그를 빠르게 발견하고 해결하는 데 도움이 됩니다. - 지속적인 배포(Continuous Delivery, CD): 테스트를 통과한 코드를 자동으로 배포 환경에 배포하는 프로세스입니다. CD는 소프트웨어를 빠르게 출시하고 업데이트하는 데 도움이 됩니다.', '2024-07-23 03:34:50.119328', '2024-07-23 03:34:50.119328');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (41, '파싱', '컴퓨터 과학에서 특정 형식으로 구성된 데이터를 분석하고 해석하는 과정 파싱은 주로 텍스트 기반 데이터, 프로그래밍 언어 소스 코드, XML 문서 등을 처리하는 데 사용됩니다. 파싱 과정에서 데이터의 구조를 이해하고 의미 있는 정보를 추출합니다.', '2024-07-23 03:34:50.120999', '2024-07-23 03:34:50.120999');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (42, '핑', '컴퓨터 네트워크에서 두 장치 간의 연결성을 테스트하는 데 사용되는 도구 핑은 다음과 같은 다양한 상황에서 사용됩니다. - 네트워크 문제 진단: 네트워크 연결이 끊겨 있거나 속도가 느린 경우 핑을 사용하여 문제의 원인을 파악할 수 있습니다. - 웹 사이트 성능 테스트: 웹 사이트에 연결하는 데 걸리는 시간을 측정하는 데 핑을 사용할 수 있습니다. - 새로운 네트워크 장치 설정 확인: 새로 설치한 네트워크 장치가 올바르게 작동하는지 확인하는 데 핑을 사용할 수 있습니다.', '2024-07-23 03:34:50.122351', '2024-07-23 03:34:50.122351');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (43, 'SRE', '소프트웨어 시스템의 안정성, 확장성, 및 성능을 유지하는 것을 담당하는 엔지니어링 분야 SRE는 전통적인 소프트웨어 개발 및 운영 팀의 역할을 결합하여 소프트웨어를 서비스로 제공하는 데 필요한 모든 측면을 관리합니다.', '2024-07-23 03:34:50.123978', '2024-07-23 03:34:50.123978');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (44, 'SSH', '네트워크를 통해 두 컴퓨터 간의 안전한 연결을 제공하는 프로토콜 SSH는 다음과 같은 다양한 목적으로 사용됩니다. - 원격 컴퓨터 관리: 시스템 관리자는 SSH를 사용하여 원격 컴퓨터에 로그인하고 관리 작업을 수행할 수 있습니다. - 파일 전송: 사용자는 SSH를 사용하여 두 컴퓨터 간에 파일을 안전하게 전송할 수 있습니다. - 애플리케이션 실행: 사용자는 SSH를 사용하여 원격 컴퓨터에서 애플리케이션을 실행할 수 있습니다. - 포트 포워딩: 사용자는 SSH를 사용하여 한 컴퓨터의 포트를 다른 컴퓨터의 포트로 전달할 수 있습니다.', '2024-07-23 03:34:50.125390', '2024-07-23 03:34:50.125390');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (45, '성능 테스트', '한 가지 시스템이나 제품의 성능을 객관적으로 측정하고 비교하기 위한 테스트 BMT는 일반적으로 동일한 조건에서 서로 다른 시스템 또는 제품을 테스트하여 어떤 시스템 또는 제품이 더 우수한 성능을 제공하는지를 확인하는 데 사용됩니다.', '2024-07-23 03:34:50.126531', '2024-07-23 03:34:50.126531');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (46, 'gRPC', 'RPC(Remote Procedure Call)는 네트워크를 통해 원격 시스템에 있는 프로시저를 호출하는 기술입니다. RPC는 마치 로컬 시스템에서 함수를 호출하는 것처럼 원격 시스템의 프로시저를 호출할 수 있도록 해줍니다. gRPC는 Google에서 개발한 오픈 소스 RPC 프레임워크입니다.', '2024-07-23 03:34:50.128130', '2024-07-23 03:34:50.128130');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (47, 'NAS', '네트워크를 통해 여러 사용자가 파일 저장 및 공유를 할 수 있도록 하는 장치 NAS는 다양한 용도로 사용됩니다. 개인 용도로는 사진, 음악, 비디오 등의 개인 파일을 저장하고 공유하는 데 사용할 수 있습니다.  사업 용도로는 문서, 스프레드시트, 프레젠테이션과 같은 업무 파일을 저장하고 공유하는 데 사용할 수 있습니다.  또한 NAS는 데이터 백업, 파일 스트리밍, 미디어 서버 등으로도 사용할 수 있습니다.', '2024-07-23 03:34:50.129742', '2024-07-23 03:34:50.129742');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (48, 'CDN', '웹 콘텐츠를 사용자에게 더 빠르고 안정적으로 제공하기 위해 지리적으로 분산된 네트워크를 사용하는 기술 웹사이트, 이미지, 동영상, 스트리밍 미디어 등 다양한 콘텐츠를 빠르게 전송하는 데 효과적으로 사용됩니다.', '2024-07-23 03:34:50.130845', '2024-07-23 03:34:50.130845');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (49, 'DNS', '인터넷 주소록이라고도 불리는 시스템으로, 도메인 이름(예: www.example.com)을 IP 주소(예: 192.0.2.44)로 변환하는 역할을 합니다.  쉽게 말해, 사람이 쉽게 기억할 수 있는 도메인 이름을 컴퓨터가 이해할 수 있는 IP 주소로 변환하는 시스템이라고 볼 수 있습니다.', '2024-07-23 03:34:50.133094', '2024-07-23 03:34:50.133094');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (50, '엔드포인트', '네트워크에서 데이터를 주고받을 수 있는 논리적 또는 물리적 위치 간단히 말해서, 엔드포인트는 네트워크 상에서 연결하고 상호 작용할 수 있는 문과 같습니다. 각 엔드포인트는 고유한 IP 주소 또는 식별자를 가지고 있으며, 네트워크를 통해 다른 엔드포인트와 통신할 수 있습니다.', '2024-07-23 03:34:50.134323', '2024-07-23 03:34:50.134323');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (51, 'Request', '엔드포인트가 다른 엔드포인트에게 데이터나 작업을 수행하도록 요청하는 메시지', '2024-07-23 03:34:50.135347', '2024-07-23 03:34:50.135347');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (52, 'Response', '요청에 대한 응답으로 엔드포인트에서 다른 엔드포인트로 전송하는 메시지', '2024-07-23 03:34:50.136292', '2024-07-23 03:34:50.136292');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (53, 'JSON', 'Javascript에서 사용하는 객체 정의 방법', '2024-07-23 03:34:50.137202', '2024-07-23 03:34:50.137202');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (54, '포트', '컴퓨터 또는 네트워크 장치에서 특정 애플리케이션이나 서비스를 식별하는 데 사용되는 논리적 번호 포트는 여러 애플리케이션이 동시에 같은 컴퓨터에서 실행될 수 있도록 하는 가상 통로와 같습니다.  각 포트는 고유한 번호를 가지고 있으며, 0에서 65535까지의 범위를 사용할 수 있습니다.', '2024-07-23 03:34:50.138137', '2024-07-23 03:34:50.138137');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (55, '프로토콜', '두 시스템 간의 통신 방식을 정의하는 규칙 집합 프로토콜은 두 시스템이 서로 어떻게 대화해야 하는지에 대한 약속과 같습니다. 프로토콜에선 전송되는 데이터 형식과 데이터 전송 방식 그리고 오류 처리에 대해 정의합니다.', '2024-07-23 03:34:50.139058', '2024-07-23 03:34:50.139058');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (56, '로드 밸런싱', '네트워크 트래픽을 여러 서버에 분산하여 처리하는 기술 로드 밸런싱을 통해 서버 부하를 줄이고, 성능을 향상시키며, 사용자 가용성을 높일 수 있습니다. 가령 온라인 쇼핑몰의 경우 높은 트래픽을 처리하고 고객에게 빠른 응답 속도를 제고하기 위해 사용합니다. 온라인 게임의 경우 많은 플레이어를 동시에 처리하고 게임 지연을 줄이기 위해 사용합니다.', '2024-07-23 03:34:50.140025', '2024-07-23 03:34:50.140025');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (57, '가상화', '하나의 컴퓨터를 여러 개의 가상 컴퓨터처럼 사용할 수 있도록 하는 기술', '2024-07-23 03:34:50.141069', '2024-07-23 03:34:50.141069');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (58, '데이터베이스', '구조화된 형태로 데이터를 저장하고 관리하는 시스템 데이터를 체계적으로 정리하고, 쉽게 찾고 사용할 수 있도록 하는 도구라고 생각하면 됩니다.', '2024-07-23 03:34:50.142350', '2024-07-23 03:34:50.142350');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (59, '테이블', '테이블은 행과 열로 구성된 데이터 구조로, 데이터베이스에서 데이터를 저장하는 기본 단위 각 행은 하나의 데이터 레코드를 나타내고, 각 열은 레코드의 특정 속성을 나타냅니다. 테이블은 마치 스프레드시트와 유사한 형태로 데이터를 보여주고, 행과 열을 사용하여 원하는 데이터를 쉽게 찾고 조작할 수 있도록 합니다.', '2024-07-23 03:34:50.143414', '2024-07-23 03:34:50.143414');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (60, '기본 키', '테이블 내의 각 레코드를 고유하게 식별하는 열 또는 열 집합 다른 열의 값이 중복될 수 있는 반면, 기본 키 값은 항상 고유하고 null 값을 허용하지 않습니다. 기본 키는 데이터 무결성을 유지하고 중복된 데이터를 방지하는 데 중요한 역할을 합니다.', '2024-07-23 03:34:50.144500', '2024-07-23 03:34:50.144500');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (61, '외래 키', '한 테이블의 열을 다른 테이블의 기본 키 열과 연결하는 관계 외래키는 두 테이블 간의 데이터 관계를 정의하고 데이터 무결성을 유지하는 데 도움이 됩니다. 예를 들어, \'고객\' 테이블에 \'주소\' 테이블의 외래키 열이 있다면, \'고객\' 테이블의 각 레코드는 \'주소\' 테이블의 고유한 레코드를 참조하게 됩니다.', '2024-07-23 03:34:50.145594', '2024-07-23 03:34:50.145594');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (62, '인덱스', '테이블의 특정 열에 대한 검색 속도를 향상시키는 데이터 구조 책의 색인과 유사하게, 인덱스는 데이터베이스 시스템이 테이블 내의 특정 레코드를 빠르게 찾도록 도와줍니다. 자주 검색되는 열에 인덱스를 생성하면 데이터 검색 속도를 크게 향상시킬 수 있으며, 데이터베이스 성능을 개선하는 데 효과적인 방법입니다.', '2024-07-23 03:34:50.147458', '2024-07-23 03:34:50.147458');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (63, 'SQL', '관계형 데이터베이스에서 데이터를 조작하는 표준 언어 데이터베이스에 데이터를 저장하고, 검색하고, 삭제하고, 수정하는 데 사용하는 데이터베이스 프로그래밍 언어라고 생각하면 됩니다.', '2024-07-23 03:34:50.148816', '2024-07-23 03:34:50.148816');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (64, '정규화', '데이터베이스의 데이터 구조를 체계적으로 조직하여 데이터 중복을 최소화하고, 데이터 무결성을 유지하며, 데이터베이스의 효율성을 높이는 프로세스 데이터베이스 정규화는 데이터 중복을 최소화하고 데이터 무결성을 유지하는 목적으로 사용됩니다. 또한 데이터베이스 구조를 최적화해 데이터 검색 및 조작 속도를 높이고 데이터베이스 관리 작업을 용이하게 합니다.', '2024-07-23 03:34:50.150348', '2024-07-23 03:34:50.150348');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (65, '트랜잭션', '데이터베이스와 같은 시스템의 상태를 일관되게 변경하는 작업 단위 트랜잭션은 ACID 특성을 만족하도록 설계되어 데이터 무결성을 유지합니다. ACID는 트랜잭션의 핵심 특성을 나타내는 약자입니다. - 원자성 (Atomicity): 트랜잭션은 하나의 작업 단위로 실행되며, 트랜잭션이 완료되거나 실패할 때까지 부분적인 작업이 수행되지 않습니다. - 일관성 (Consistency): 트랜잭션이 완료되면 데이터베이스는 항상 일관된 상태를 유지합니다. 트랜잭션 중간에 데이터베이스 상태가 변경되지 않습니다. - 격리성 (Isolation): 동시에 실행되는 여러 트랜잭션은 서로 영향을 미치지 않습니다. 각 트랜잭션은 서로 독립적으로 실행되는 것처럼 작동합니다. - 지속성 (Durability): 트랜잭션이 성공적으로 완료되면, 그 결과는 영구적으로 저장됩니다. 시스템 장애나 데이터 손실에도 영향을 받지 않습니다.', '2024-07-23 03:34:50.151733', '2024-07-23 03:34:50.151733');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (66, '컨벤션', '일관되고 읽기 쉬운 코드 베이스 유지를 위해 개발자가 따르는 합의된 규칙', '2024-07-23 03:34:50.152803', '2024-07-23 03:34:50.152803');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (67, '클래스', '객체의 청사진 역할을 하는 설계 요소 붕어빵 틀 자체를 클래스라고 생각하면 됩니다. 붕어빵 틀은 붕어빵의 속성(팥, 깨, 모양 등)과 행동(먹는 것)을 정의하고 있으며, 이 틀을 사용하여 여러 개의 붕어빵(객체)를 만들 수 있습니다.', '2024-07-23 03:34:50.153804', '2024-07-23 03:34:50.153804');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (68, '객체', '데이터와 그 데이터를 처리하는 메서드를 묶어 놓은 기본 단위 붕어빵 틀을 이용하여 만든 붕어빵 하나하나를 객체라고 생각하면 됩니다. 각 붕어빵은 틀에서 정의된 속성(팥, 깨, 모양 등)과 행동(먹는 것)을 가지고 있습니다.', '2024-07-23 03:34:50.154861', '2024-07-23 03:34:50.154861');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (69, '객체 지향 프로그래밍', '객체라는 기본 단위를 사용하여 프로그램을 설계하고 작성하는 프로그래밍 패러다임 객체는 데이터(속성)와 행동(메서드)을 가지고 있으며, 서로 상호작용하여 프로그램을 구성합니다.', '2024-07-23 03:34:50.156034', '2024-07-23 03:34:50.156034');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (70, 'CSS', 'HTML 문서의 스타일을 정의하는 데 사용되는 스타일 시트 언어  HTML 문서가 웹 페이지의 구조를 담당한다면, CSS는 웹 페이지의 디자인을 담당합니다.', '2024-07-23 03:34:50.157082', '2024-07-23 03:34:50.157082');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (71, '레거시', '오래된 기술로 개발되었지만, 여전히 사용되고 있는 컴퓨터 시스템, 소프트웨어, 하드웨어를 의미합니다.', '2024-07-23 03:34:50.158138', '2024-07-23 03:34:50.158138');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (72, '트러블 슈팅', '시스템이나 장치에서 발생하는 문제를 진단하고 해결하는 과정 트러블 슈팅의 경우 문제의 근본 원인을 파악하고 해결 방안을 모색하는 데 초점을 맞춥니다. 문제의 증상만 해결하는 것이 아니라, 발생 원인을 제거하여 동일한 문제가 다시 발생하지 않도록 방지하는 것을 목표로 합니다. 반면 디버깅 코드는 시스템에서 오류를 찾고 수정하는 데 초점을 맞춥니다. 코드 실행 과정을 단계별로 검사하고, 오류가 발생하는 부분을 정확히 식별하여 코드를 수정하거나 버그를 제거하는 것을 목표로 합니다.', '2024-07-23 03:34:50.159250', '2024-07-23 03:34:50.159250');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (73, '네이티브 앱', '특정 모바일 운영 체제(예: iOS, Android)를 위해 자체 프로그래밍 언어(예: Swift, Java)로 개발됩니다. 일반적으로 하이브리드 앱보다 빠르고 응답성이 뛰어납니다. 네이티브 앱은 운영 체제와 직접 통합되기 때문에 하드웨어 가속 및 기타 최적화 기능을 활용할 수 있습니다.', '2024-07-23 03:34:50.160379', '2024-07-23 03:34:50.160379');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (74, '하이브리드 앱', '웹 기술(예: HTML, CSS, JavaScript)을 사용하여 빌드되고, 기본적으로 웹 뷰 앱으로 작동하며, 운영 체제별 래퍼를 통해 각 플랫폼에 맞게 패키징됩니다. 웹 기술 기반으로 개발되었기 때문에 플랫폼별 업데이트나 버그 수정 없이도 유지 관리가 비교적 용이합니다.', '2024-07-23 03:34:50.161549', '2024-07-23 03:34:50.161549');
INSERT INTO demo_term (id, term, meaning, created_at, updated_at) VALUES (75, '스플래시', '컴퓨터 프로그램, 웹사이트 또는 모바일 앱을 시작할 때 잠깐 나타나는 로고나 이미지 로딩 화면이라고도 불리며, 프로그램이나 앱이 로드되고 사용자 인터페이스가 준비될 때까지 대기 시간을 채우는 역할을 합니다.', '2024-07-23 03:34:50.162647', '2024-07-23 03:34:50.162647');

#demo_term_synonym
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (1, 'Software Development Kit', 1);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (2, 'Application Programming Interface', 2);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (3, 'Integrated Development Environment', 3);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (4, '인앱 브라우저', 4);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (5, '익스터널 브라우저', 5);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (6, 'Change Data Capture', 6);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (7, '스트리밍', 7);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (8, 'Compiler', 8);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (9, 'Client', 9);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (10, 'Server', 10);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (11, 'Front-end', 11);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (12, 'Back-end', 12);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (13, 'Debug', 13);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (14, 'Build', 14);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (15, 'Deployment', 15);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (16, 'Responsive Website', 16);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (17, 'Single Sign On', 17);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (18, 'Software as a Service', 18);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (19, 'Platform as a Service', 19);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (20, 'Infrastructure as a Service', 20);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (21, 'Simple Object Access Protocol API', 21);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (22, 'Remote Procedure Call', 22);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (23, 'Websocket API', 23);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (24, 'Representational State Transfer API', 24);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (25, 'Hypertext Transfer Protocol', 25);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (26, '하이퍼텍스트 전송 프로토콜', 25);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (27, 'Hypertext Transfer Protocol Secure', 26);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (28, 'Secure Sockets Layer', 27);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (29, '보안 소켓 계층', 27);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (30, '전송 계층 보안', 28);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (31, 'Framework', 29);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (32, 'Library', 30);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (33, 'Plug-in', 31);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (34, '인자', 32);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (35, 'Parameter', 32);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (36, '인자값', 33);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (37, 'Asynchronous Javascript and XML', 34);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (38, 'Multi-thread', 35);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (39, 'Rendering', 36);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (40, 'SandBox', 37);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (41, 'Data lake', 38);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (42, 'DevOps', 39);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (43, 'Continuous Integration/Continuous Delivery', 40);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (44, '지속적인 통합/지속적인 배포', 40);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (45, 'Parsing', 41);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (46, 'Ping', 42);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (47, 'Site Reliability Engineering', 43);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (48, 'Secure Shell Protocol', 44);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (49, 'BMT', 45);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (50, 'Bench Marking Test', 45);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (51, 'Google RPC', 46);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (52, 'Google Remote Procedure Call', 46);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (53, 'Network Attached Storage', 47);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (54, 'Contents Delivery Network', 48);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (55, 'Domain Name System', 49);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (56, 'Endpoint', 50);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (57, '요청', 51);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (58, '응답', 52);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (59, 'JavaSript Object Notation', 53);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (60, 'Port', 54);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (61, 'Protocol', 55);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (62, 'Load Balancing', 56);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (63, 'Virtualization', 57);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (64, 'Database', 58);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (65, 'Table', 59);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (66, 'Primary Key', 60);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (67, 'Foreign Key', 61);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (68, 'Index', 62);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (69, 'Structured Query Language', 63);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (70, 'Normalization', 64);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (71, 'Transaction', 65);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (72, 'Convention', 66);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (73, 'Class', 67);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (74, 'Object', 68);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (75, 'OOP', 69);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (76, 'Cascading Style Sheets', 70);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (77, 'Regacy', 71);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (78, 'Trouble Shooting', 72);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (79, 'Native App', 73);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (80, 'Hibrid App', 74);
INSERT INTO demo_term_synonym (id, synonym, demo_term_id) VALUES (81, 'Splash', 75);

COMMIT;
